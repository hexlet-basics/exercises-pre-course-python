---

name: Условная конструкция (if)
theory: |

  В этом уроке вы узнаете, что с помощью условных конструкций можно изменить поведение программы, что будет зависеть от проверяемых условий. Благодаря этому вы сможете писать сложные программы, которые ведут себя в зависимости от ситуации.

  Для примера рассмотрим функцию, которая определяет тип переданного предложения. Для начала она будет отличать обычные предложения от вопросительных:

  ```python
  def get_type_of_sentence(sentence):
      last_char = sentence[-1]
      if last_char == '?':
          return 'question'
      return 'normal'

  print(get_type_of_sentence('Hodor'))   # => normal
  print(get_type_of_sentence('Hodor?'))  # => question
  ```

  https://replit.com/@hexlet/python-basics-conditionals-if

  `if` — конструкция языка, которая управляет порядком выполнения инструкций. После слова `if` ей передается выражение-предикат, и в конце ставится двоеточие. После этого описывается блок кода. Он выполнится, если предикат — истина.

  Если предикат — ложь, то блок кода пропускается, и функция продолжает свое выполнение дальше. В нашем случае следующая строчка кода — `return 'normal'` — заставит функцию вернуть строку и завершиться.

  `return` может находиться в любом месте функции — даже внутри блока кода с условием.

instructions: |

  Реализуйте функцию `guess_number()`, которая принимает число и проверяет, равно ли число заданному (пусть это будет 42). Если равно, то функция должна вернуть строку `'You win!'`, в противном случае нужно вернуть строку `'Try again!'`.

  ```python
  guess_number(42) # You win!
  guess_number(61) # Try again!
  ```

tips: []

definitions:
  - name: "Условная конструкция"
    description: "способ задать условие для выполнения кода. Например, `if x > 10: ... `"
