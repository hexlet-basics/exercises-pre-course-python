---

name: Variables and concatenation
theory: |

  Let's try using variables with concatenation. Nothing will change syntactically. We know how to concatenate two lines:

  ```python
  what = "Kings" + "road"
  print(what)  # => Kingsroad
  ```

  So we're able to glue together a string and one variable in which a string is written:

  ```python
  first = "Kings"
  what = first + "road"

  print(what)  # => Kingsroad
  ```

  You can also concatenate two variables with strings in them:

  ```python
  first = "Kings"
  last = 'road'

  what = first + last
  print(what)  # => Kingsroad
  ```

  Variables are an important tool in programming. They simplify complex calculations and thus make development easier. But to work successfully with variables, you must not only use them correctly, but also call them correctly. We'll talk about this in the next lesson.

instructions: |

  Websites are constantly sending emails to their users. A common task is to automatically send a personalized email with the user's name in the header. If a database stores people's names, the task of generating the header boils down to concatenation: for example, you want to glue the string `Hello` with a string containing a user's name.

  Write a program that will create the header and body of an email using ready-made variables and print the resulting strings.

  Use the `first_name` and `greeting`, variables, a comma, and an exclamation point for the header. Print it in the correct order.

  Use the variables `info` and `intro` for the body of the message, with the second sentence on a new line.

  The result should look like this:

  <pre class='hexlet-basics-output'>
  Hello, Joffrey!
  Here is important information about your account security.
  We couldn't verify your mother's maiden name.
  </pre>

  Perform the task using only two `print()` statements.

tips:
  - |
    Consider how you should concatenate the variables to get the two-line output of the email body.
  - |
    Remember that you can create a string that contains only the control sequence `\n`. You can concatenate this string with variables to get proper text formatting.
